mkdir -p build
Tue, 18 Jun 2024 17:58:24 +0800
time -a -o ./build/time.log mill -i xiangshan[chisel3].test.runMain top.SimTop    \
	-td build --config DefaultConfig --infer-rw --repl-seq-mem -c:top.SimTop:-o:build/SimTop.v.conf --gen-mem-verilog full                          \
	--num-cores 1 --with-dramsim3 --with-chiseldb --with-constantin --enable-difftest
FPGASoC cores: 1 banks: 4 block size: 64 bus size: 256

int wb arbiter:
[ AluExeUnit ] -> out #0
[ AluExeUnit ] -> out #1
[ AluExeUnit ] -> out #2
[ AluExeUnit ] -> out #3
[ LoadExu ] -> out #4
[ LoadExu ] -> out #5
[ LoadExu ] -> out #6
[ MulDivExeUnit JmpCSRExeUnit FmiscExeUnit(buffered) ] -> arb -> out (hasFastUopOut) #7
[ MulDivExeUnit FmiscExeUnit(buffered) ] -> arb -> out (hasFastUopOut) #8


fp wb arbiter:
[ FmacExeUnit ] -> out (hasFastUopOut) #0
[ FmacExeUnit ] -> out (hasFastUopOut) #1
[ FmacExeUnit ] -> out (hasFastUopOut) #2
[ FmacExeUnit ] -> out (hasFastUopOut) #3
[ LoadExu ] -> out #4
[ LoadExu ] -> out #5
[ LoadExu ] -> out #6
[ FmiscExeUnit JmpCSRExeUnit(buffered) ] -> arb -> out (hasFastUopOut) #7
[ FmiscExeUnit ] ->  out (hasFastUopOut) #8

inter-scheduler wakeup sources for 0: List(List(4, 5, 6), List(), List(), List(4, 5, 6), List(), List())
inter-scheduler wakeup sources for 1: List(List(9, 10, 11, 12), List(9, 10, 11, 12))
inner fast: List(List(0, 1, 2, 3, 7, 8), List(7, 8), List(), List(0, 1, 2, 3), List(0, 1, 2, 3), List())
inner fast: List(List(), List())
Connecting L1 prefetcher to L2!
Connecting Core_0's L1 pf source to L3!
Connecting L1 prefetcher to L3!
Connecting core_0's L2 TPmeta request to L3!
Connecting core_0's L2 TPmeta response to L3!
TLClientsMerger: Merging clients:
TLMasterParameters(L2, IdRange(768,1024), List(), List(AddressSet(0x0, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L2, IdRange(512,768), List(), List(AddressSet(0x40, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L2, IdRange(256,512), List(), List(AddressSet(0x80, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L2, IdRange(0,256), List(), List(AddressSet(0xc0, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
Merged params:
List(TLMasterParameters(L2, IdRange(0,1024), List(), List(AddressSet(0x0, ~0xc0), AddressSet(0x40, ~0xc0), AddressSet(0x80, ~0xc0), AddressSet(0xc0, ~0xc0)), Set(), false, false, P, TBALGFPH, false))
TLClientsMerger: Merging clients:
TLMasterParameters(L3, IdRange(48,64), List(), List(AddressSet(0x0, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L3, IdRange(32,48), List(), List(AddressSet(0x40, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L3, IdRange(16,32), List(), List(AddressSet(0x80, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
TLMasterParameters(L3, IdRange(0,16), List(), List(AddressSet(0xc0, ~0xc0)), Set(), false, false, P, TBALGFPH, false)
Merged params:
List(TLMasterParameters(L3, IdRange(0,64), List(), List(AddressSet(0x0, ~0xc0), AddressSet(0x40, ~0xc0), AddressSet(0x80, ~0xc0), AddressSet(0xc0, ~0xc0)), Set(), false, false, P, TBALGFPH, false))
Interrupt map (2 harts 66 interrupts):
  [1, 64] => plicSource
  [65, 65] => beu
  [66, 66] => ctrl_unit

ICache:
  ICacheSets: 256
  ICacheWays: 4
  ICacheBanks: 2
  enableICachePrefetch:     true
  prefetchToL1:       false
  prefetchPipeNum:    1
  nPrefetchEntries:   12
  nPrefBufferEntries: 32
  maxIPFMoveConf:     1
Constantin fileRead: isWriteICacheTable0 = 0
Cache op decoder (icache):
  Id 0
[composer] bypassing output of fast pred: FauFTB
total meta size: 413


history buffer length 256
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
Constantin fileRead: isWriteFetchToIBufferTable0 = 0
Constantin fileRead: isWriteIfuWbToFtqTable0 = 0
ftq redirect SRAM: entry 249 * 64 * 3
ftq redirect SRAM: ahead fh 24 * 64 * 3
Constantin fileRead: isWritePrefetchPtrTable0 = 0
Constantin fileRead: isWriteFTQTable0 = 0
itlb_storage tlb_fa: nSets1 nWays:48
itlb: page: 48 fa plru
(Frontend perfEvents Set,noEvent,UInt<1>(0),0)
(Frontend perfEvents Set,frontendFlush                ,NewIFU.io_perf[0].value: IO[UInt<6>],1)
(Frontend perfEvents Set,ifu_req                      ,NewIFU.io_perf[1].value: IO[UInt<6>],2)
(Frontend perfEvents Set,ifu_miss                     ,NewIFU.io_perf[2].value: IO[UInt<6>],3)
(Frontend perfEvents Set,ifu_req_cacheline_0          ,NewIFU.io_perf[3].value: IO[UInt<6>],4)
(Frontend perfEvents Set,ifu_req_cacheline_1          ,NewIFU.io_perf[4].value: IO[UInt<6>],5)
(Frontend perfEvents Set,ifu_req_cacheline_0_hit      ,NewIFU.io_perf[5].value: IO[UInt<6>],6)
(Frontend perfEvents Set,ifu_req_cacheline_1_hit      ,NewIFU.io_perf[6].value: IO[UInt<6>],7)
(Frontend perfEvents Set,only_0_hit                   ,NewIFU.io_perf[7].value: IO[UInt<6>],8)
(Frontend perfEvents Set,only_0_miss                  ,NewIFU.io_perf[8].value: IO[UInt<6>],9)
(Frontend perfEvents Set,hit_0_hit_1                  ,NewIFU.io_perf[9].value: IO[UInt<6>],10)
(Frontend perfEvents Set,hit_0_miss_1                 ,NewIFU.io_perf[10].value: IO[UInt<6>],11)
(Frontend perfEvents Set,miss_0_hit_1                 ,NewIFU.io_perf[11].value: IO[UInt<6>],12)
(Frontend perfEvents Set,miss_0_miss_1                ,NewIFU.io_perf[12].value: IO[UInt<6>],13)
(Frontend perfEvents Set,IBuffer_Flushed  ,IBuffer.io_perf[0].value: IO[UInt<6>],14)
(Frontend perfEvents Set,IBuffer_hungry   ,IBuffer.io_perf[1].value: IO[UInt<6>],15)
(Frontend perfEvents Set,IBuffer_1_4_valid,IBuffer.io_perf[2].value: IO[UInt<6>],16)
(Frontend perfEvents Set,IBuffer_2_4_valid,IBuffer.io_perf[3].value: IO[UInt<6>],17)
(Frontend perfEvents Set,IBuffer_3_4_valid,IBuffer.io_perf[4].value: IO[UInt<6>],18)
(Frontend perfEvents Set,IBuffer_4_4_valid,IBuffer.io_perf[5].value: IO[UInt<6>],19)
(Frontend perfEvents Set,IBuffer_full     ,IBuffer.io_perf[6].value: IO[UInt<6>],20)
(Frontend perfEvents Set,Front_Bubble     ,IBuffer.io_perf[7].value: IO[UInt<6>],21)
(Frontend perfEvents Set,icache_miss_cnt  ,ICache.io_perf[0].value: IO[UInt<6>],22)
(Frontend perfEvents Set,icache_miss_penalty,ICache.io_perf[1].value: IO[UInt<6>],23)
(Frontend perfEvents Set,bpu_s2_redirect        ,Ftq.io_perf[0].value: IO[UInt<6>],24)
(Frontend perfEvents Set,bpu_s3_redirect        ,Ftq.io_perf[1].value: IO[UInt<6>],25)
(Frontend perfEvents Set,bpu_to_ftq_stall       ,Ftq.io_perf[2].value: IO[UInt<6>],26)
(Frontend perfEvents Set,mispredictRedirect     ,Ftq.io_perf[3].value: IO[UInt<6>],27)
(Frontend perfEvents Set,replayRedirect         ,Ftq.io_perf[4].value: IO[UInt<6>],28)
(Frontend perfEvents Set,predecodeRedirect      ,Ftq.io_perf[5].value: IO[UInt<6>],29)
(Frontend perfEvents Set,to_ifu_bubble          ,Ftq.io_perf[6].value: IO[UInt<6>],30)
(Frontend perfEvents Set,from_bpu_real_bubble   ,Ftq.io_perf[7].value: IO[UInt<6>],31)
(Frontend perfEvents Set,BpInstr                ,Ftq.io_perf[8].value: IO[UInt<6>],32)
(Frontend perfEvents Set,BpBInstr               ,Ftq.io_perf[9].value: IO[UInt<6>],33)
(Frontend perfEvents Set,BpRight                ,Ftq.io_perf[10].value: IO[UInt<6>],34)
(Frontend perfEvents Set,BpWrong                ,Ftq.io_perf[11].value: IO[UInt<6>],35)
(Frontend perfEvents Set,BpBRight               ,Ftq.io_perf[12].value: IO[UInt<6>],36)
(Frontend perfEvents Set,BpBWrong               ,Ftq.io_perf[13].value: IO[UInt<6>],37)
(Frontend perfEvents Set,BpJRight               ,Ftq.io_perf[14].value: IO[UInt<6>],38)
(Frontend perfEvents Set,BpJWrong               ,Ftq.io_perf[15].value: IO[UInt<6>],39)
(Frontend perfEvents Set,BpIRight               ,Ftq.io_perf[16].value: IO[UInt<6>],40)
(Frontend perfEvents Set,BpIWrong               ,Ftq.io_perf[17].value: IO[UInt<6>],41)
(Frontend perfEvents Set,BpCRight               ,Ftq.io_perf[18].value: IO[UInt<6>],42)
(Frontend perfEvents Set,BpCWrong               ,Ftq.io_perf[19].value: IO[UInt<6>],43)
(Frontend perfEvents Set,BpRRight               ,Ftq.io_perf[20].value: IO[UInt<6>],44)
(Frontend perfEvents Set,BpRWrong               ,Ftq.io_perf[21].value: IO[UInt<6>],45)
(Frontend perfEvents Set,ftb_false_hit          ,Ftq.io_perf[22].value: IO[UInt<6>],46)
(Frontend perfEvents Set,ftb_hit                ,Ftq.io_perf[23].value: IO[UInt<6>],47)
(Frontend perfEvents Set,fauftb_commit_hit       ,Predictor.io_perf[0].value: IO[UInt<6>],48)
(Frontend perfEvents Set,fauftb_commit_miss      ,Predictor.io_perf[1].value: IO[UInt<6>],49)
(Frontend perfEvents Set,tage_tht_hit                  ,Predictor.io_perf[2].value: IO[UInt<6>],50)
(Frontend perfEvents Set,sc_update_on_mispred          ,Predictor.io_perf[3].value: IO[UInt<6>],51)
(Frontend perfEvents Set,sc_update_on_unconf           ,Predictor.io_perf[4].value: IO[UInt<6>],52)
(Frontend perfEvents Set,ftb_commit_hits            ,Predictor.io_perf[5].value: IO[UInt<6>],53)
(Frontend perfEvents Set,ftb_commit_misses          ,Predictor.io_perf[6].value: IO[UInt<6>],54)
DCache:
  DCacheSets: 256
  DCacheSetDiv: 1
  DCacheWays: 4
  DCacheBanks: 8
  DCacheSRAMRowBits: 64
  DCacheWordOffset: 3
  DCacheBankOffset: 3
  DCacheSetOffset: 6
  DCacheTagOffset: 12
  DCacheAboveIndexOffset: 14
  DcacheMaxPrefetchEntry: 6
  WPUEnable: false
  WPUEnableCfPred: false
  WPUAlgorithm: mmru
  DCacheType: BankedDataArray
Constantin fileRead: isWriteBankConflictTable0 = 0
Constantin fileRead: depth0 = 32
Constantin fileRead: enableDynamicPrefetcher0 = 1
Constantin fileRead: StoreWaitThreshold_0 = 0
Constantin fileRead: nMaxPrefetchEntry0 = 14
Constantin fileRead: isWriteL1MissQMissTable0 = 0
  WpuType: MmruWPU
Constantin fileRead: isWriteLoadMissTable0 = 0
Constantin fileRead: isFirstHitWrite0 = 0
Constantin fileRead: isWriteLoadAccessTable0 = 0
Cache op decoder (dcache):
  Id 1
Uncahe Buffer Size: 4 entries
SplittedWaySRAM.rdata: OpResult[UInt<1040>]
SplittedWaySRAM.io.r.resp.data: IO[PTWEntriesWithEcc[4]]
SplittedWaySRAM_1.rdata: OpResult[UInt<2720>]
SplittedWaySRAM_1.io.r.resp.data: IO[PTWEntriesWithEcc[8]]
Constantin fileRead: isWriteL2TlbPrefetchTable0 = 0
l2tlb: a ptw, a llptw with size 6, miss queue size 40 l1:16 fa l2: nSets 8 nWays 4 l3: 32 nWays 8 blockBytes:64
Constantin fileRead: isWriteL1TlbTable0 = 0
Constantin fileRead: isWritePageCacheTable0 = 0
Constantin fileRead: isWritePTWTable0 = 0
Constantin fileRead: isWriteL2TlbMissQueueTable0 = 0
ImmUnion max len: 20
Enable 3-load and 3-store: true
Constantin fileRead: always_update0 = 1
Constantin fileRead: l1_stride_ratio0 = 2
Constantin fileRead: l2_stride_ratio0 = 5
Constantin fileRead: l2DepthRatio0 = 2
Constantin fileRead: l3DepthRatio0 = 3
Constantin fileRead: enableL3StreamPrefetch0 = 0
Constantin fileRead: enableL1StreamPrefetcher0 = 1
LoadQueueRAR: size: 80
FreeList: LoadQueueRAR freelist, size 80
LoadQueueRAW: size 64
FreeList: LoadQueueRAW freelist, size 64
LoadQueueReplay size: 72
FreeList: LoadQueueReplay freelist, size 72
Constantin fileRead: ColdDownThreshold_0 = 12
VirtualLoadQueue: size: 80
FreeList: UncacheBuffer freelist, size 20
StoreQueue: size:64
Constantin fileRead: ForceWriteUpper_0 = 60
Constantin fileRead: ForceWriteLower_0 = 55
Constantin fileRead: StoreBufferThreshold_0 = 7
Constantin fileRead: StoreBufferBase_0 = 4
ldtlb_storage tlb_fa: nSets1 nWays:48
ldtlb: page: 48 fa plru
sttlb_storage tlb_fa: nSets1 nWays:48
sttlb: page: 48 fa plru
pftlb_storage tlb_fa: nSets1 nWays:48
pftlb: page: 48 fa plru
Constantin fileRead: CorrectMissTrain0 = 0
(MemBlock perfEvents Set,noEvent,UInt<1>(0),0)
(MemBlock perfEvents Set,load_s0_in_fire         ,LoadUnit.io_perf[0].value: IO[UInt<6>],1)
(MemBlock perfEvents Set,load_to_load_forward    ,LoadUnit.io_perf[1].value: IO[UInt<6>],2)
(MemBlock perfEvents Set,stall_dcache            ,LoadUnit.io_perf[2].value: IO[UInt<6>],3)
(MemBlock perfEvents Set,load_s1_in_fire         ,LoadUnit.io_perf[3].value: IO[UInt<6>],4)
(MemBlock perfEvents Set,load_s1_tlb_miss        ,LoadUnit.io_perf[4].value: IO[UInt<6>],5)
(MemBlock perfEvents Set,load_s2_in_fire         ,LoadUnit.io_perf[5].value: IO[UInt<6>],6)
(MemBlock perfEvents Set,load_s2_dcache_miss     ,LoadUnit.io_perf[6].value: IO[UInt<6>],7)
(MemBlock perfEvents Set,load_s0_in_fire         ,LoadUnit_1.io_perf[0].value: IO[UInt<6>],8)
(MemBlock perfEvents Set,load_to_load_forward    ,LoadUnit_1.io_perf[1].value: IO[UInt<6>],9)
(MemBlock perfEvents Set,stall_dcache            ,LoadUnit_1.io_perf[2].value: IO[UInt<6>],10)
(MemBlock perfEvents Set,load_s1_in_fire         ,LoadUnit_1.io_perf[3].value: IO[UInt<6>],11)
(MemBlock perfEvents Set,load_s1_tlb_miss        ,LoadUnit_1.io_perf[4].value: IO[UInt<6>],12)
(MemBlock perfEvents Set,load_s2_in_fire         ,LoadUnit_1.io_perf[5].value: IO[UInt<6>],13)
(MemBlock perfEvents Set,load_s2_dcache_miss     ,LoadUnit_1.io_perf[6].value: IO[UInt<6>],14)
(MemBlock perfEvents Set,load_s0_in_fire         ,LoadUnit_2.io_perf[0].value: IO[UInt<6>],15)
(MemBlock perfEvents Set,load_to_load_forward    ,LoadUnit_2.io_perf[1].value: IO[UInt<6>],16)
(MemBlock perfEvents Set,stall_dcache            ,LoadUnit_2.io_perf[2].value: IO[UInt<6>],17)
(MemBlock perfEvents Set,load_s1_in_fire         ,LoadUnit_2.io_perf[3].value: IO[UInt<6>],18)
(MemBlock perfEvents Set,load_s1_tlb_miss        ,LoadUnit_2.io_perf[4].value: IO[UInt<6>],19)
(MemBlock perfEvents Set,load_s2_in_fire         ,LoadUnit_2.io_perf[5].value: IO[UInt<6>],20)
(MemBlock perfEvents Set,load_s2_dcache_miss     ,LoadUnit_2.io_perf[6].value: IO[UInt<6>],21)
(MemBlock perfEvents Set,sbuffer_req_valid ,Sbuffer.io_perf[0].value: IO[UInt<6>],22)
(MemBlock perfEvents Set,sbuffer_req_fire  ,Sbuffer.io_perf[1].value: IO[UInt<6>],23)
(MemBlock perfEvents Set,sbuffer_merge     ,Sbuffer.io_perf[2].value: IO[UInt<6>],24)
(MemBlock perfEvents Set,sbuffer_newline   ,Sbuffer.io_perf[3].value: IO[UInt<6>],25)
(MemBlock perfEvents Set,dcache_req_valid  ,Sbuffer.io_perf[4].value: IO[UInt<6>],26)
(MemBlock perfEvents Set,dcache_req_fire   ,Sbuffer.io_perf[5].value: IO[UInt<6>],27)
(MemBlock perfEvents Set,sbuffer_idle      ,Sbuffer.io_perf[6].value: IO[UInt<6>],28)
(MemBlock perfEvents Set,sbuffer_flush     ,Sbuffer.io_perf[7].value: IO[UInt<6>],29)
(MemBlock perfEvents Set,sbuffer_replace   ,Sbuffer.io_perf[8].value: IO[UInt<6>],30)
(MemBlock perfEvents Set,mpipe_resp_valid  ,Sbuffer.io_perf[9].value: IO[UInt<6>],31)
(MemBlock perfEvents Set,refill_resp_valid ,Sbuffer.io_perf[10].value: IO[UInt<6>],32)
(MemBlock perfEvents Set,replay_resp_valid ,Sbuffer.io_perf[11].value: IO[UInt<6>],33)
(MemBlock perfEvents Set,coh_timeout       ,Sbuffer.io_perf[12].value: IO[UInt<6>],34)
(MemBlock perfEvents Set,sbuffer_1_4_valid ,Sbuffer.io_perf[13].value: IO[UInt<6>],35)
(MemBlock perfEvents Set,sbuffer_2_4_valid ,Sbuffer.io_perf[14].value: IO[UInt<6>],36)
(MemBlock perfEvents Set,sbuffer_3_4_valid ,Sbuffer.io_perf[15].value: IO[UInt<6>],37)
(MemBlock perfEvents Set,sbuffer_full_valid,Sbuffer.io_perf[16].value: IO[UInt<6>],38)
(MemBlock perfEvents Set,enq,LsqWrapper.io_perf[0].value: IO[UInt<6>],39)
(MemBlock perfEvents Set,ld_ld_violation,LsqWrapper.io_perf[1].value: IO[UInt<6>],40)
(MemBlock perfEvents Set,enq ,LsqWrapper.io_perf[2].value: IO[UInt<6>],41)
(MemBlock perfEvents Set,stld_rollback,LsqWrapper.io_perf[3].value: IO[UInt<6>],42)
(MemBlock perfEvents Set,enq,LsqWrapper.io_perf[4].value: IO[UInt<6>],43)
(MemBlock perfEvents Set,deq,LsqWrapper.io_perf[5].value: IO[UInt<6>],44)
(MemBlock perfEvents Set,deq_block,LsqWrapper.io_perf[6].value: IO[UInt<6>],45)
(MemBlock perfEvents Set,replay_full,LsqWrapper.io_perf[7].value: IO[UInt<6>],46)
(MemBlock perfEvents Set,replay_rar_nack,LsqWrapper.io_perf[8].value: IO[UInt<6>],47)
(MemBlock perfEvents Set,replay_raw_nack,LsqWrapper.io_perf[9].value: IO[UInt<6>],48)
(MemBlock perfEvents Set,replay_nuke,LsqWrapper.io_perf[10].value: IO[UInt<6>],49)
(MemBlock perfEvents Set,replay_mem_amb,LsqWrapper.io_perf[11].value: IO[UInt<6>],50)
(MemBlock perfEvents Set,replay_tlb_miss,LsqWrapper.io_perf[12].value: IO[UInt<6>],51)
(MemBlock perfEvents Set,replay_bank_conflict,LsqWrapper.io_perf[13].value: IO[UInt<6>],52)
(MemBlock perfEvents Set,replay_dcache_replay,LsqWrapper.io_perf[14].value: IO[UInt<6>],53)
(MemBlock perfEvents Set,replay_forward_fail,LsqWrapper.io_perf[15].value: IO[UInt<6>],54)
(MemBlock perfEvents Set,replay_dcache_miss,LsqWrapper.io_perf[16].value: IO[UInt<6>],55)
(MemBlock perfEvents Set,full_mask_000,LsqWrapper.io_perf[17].value: IO[UInt<6>],56)
(MemBlock perfEvents Set,full_mask_001,LsqWrapper.io_perf[18].value: IO[UInt<6>],57)
(MemBlock perfEvents Set,full_mask_010,LsqWrapper.io_perf[19].value: IO[UInt<6>],58)
(MemBlock perfEvents Set,full_mask_011,LsqWrapper.io_perf[20].value: IO[UInt<6>],59)
(MemBlock perfEvents Set,full_mask_100,LsqWrapper.io_perf[21].value: IO[UInt<6>],60)
(MemBlock perfEvents Set,full_mask_101,LsqWrapper.io_perf[22].value: IO[UInt<6>],61)
(MemBlock perfEvents Set,full_mask_110,LsqWrapper.io_perf[23].value: IO[UInt<6>],62)
(MemBlock perfEvents Set,full_mask_111,LsqWrapper.io_perf[24].value: IO[UInt<6>],63)
(MemBlock perfEvents Set,nuke_rollback,LsqWrapper.io_perf[25].value: IO[UInt<6>],64)
(MemBlock perfEvents Set,nack_rollback,LsqWrapper.io_perf[26].value: IO[UInt<6>],65)
(MemBlock perfEvents Set,mmioCycle      ,LsqWrapper.io_perf[27].value: IO[UInt<6>],66)
(MemBlock perfEvents Set,mmioCnt        ,LsqWrapper.io_perf[28].value: IO[UInt<6>],67)
(MemBlock perfEvents Set,mmio_wb_success,LsqWrapper.io_perf[29].value: IO[UInt<6>],68)
(MemBlock perfEvents Set,mmio_wb_blocked,LsqWrapper.io_perf[30].value: IO[UInt<6>],69)
(MemBlock perfEvents Set,stq_1_4_valid  ,LsqWrapper.io_perf[31].value: IO[UInt<6>],70)
(MemBlock perfEvents Set,stq_2_4_valid  ,LsqWrapper.io_perf[32].value: IO[UInt<6>],71)
(MemBlock perfEvents Set,stq_3_4_valid  ,LsqWrapper.io_perf[33].value: IO[UInt<6>],72)
(MemBlock perfEvents Set,stq_4_4_valid  ,LsqWrapper.io_perf[34].value: IO[UInt<6>],73)
(MemBlock perfEvents Set,dcache_wbq_req      ,DCacheWrapper.io_perf[0].value: IO[UInt<6>],74)
(MemBlock perfEvents Set,dcache_wbq_1_4_valid,DCacheWrapper.io_perf[1].value: IO[UInt<6>],75)
(MemBlock perfEvents Set,dcache_wbq_2_4_valid,DCacheWrapper.io_perf[2].value: IO[UInt<6>],76)
(MemBlock perfEvents Set,dcache_wbq_3_4_valid,DCacheWrapper.io_perf[3].value: IO[UInt<6>],77)
(MemBlock perfEvents Set,dcache_wbq_4_4_valid,DCacheWrapper.io_perf[4].value: IO[UInt<6>],78)
(MemBlock perfEvents Set,dcache_mp_req          ,DCacheWrapper.io_perf[5].value: IO[UInt<6>],79)
(MemBlock perfEvents Set,dcache_mp_total_penalty,DCacheWrapper.io_perf[6].value: IO[UInt<6>],80)
(MemBlock perfEvents Set,dcache_missq_req      ,DCacheWrapper.io_perf[7].value: IO[UInt<6>],81)
(MemBlock perfEvents Set,dcache_missq_1_4_valid,DCacheWrapper.io_perf[8].value: IO[UInt<6>],82)
(MemBlock perfEvents Set,dcache_missq_2_4_valid,DCacheWrapper.io_perf[9].value: IO[UInt<6>],83)
(MemBlock perfEvents Set,dcache_missq_3_4_valid,DCacheWrapper.io_perf[10].value: IO[UInt<6>],84)
(MemBlock perfEvents Set,dcache_missq_4_4_valid,DCacheWrapper.io_perf[11].value: IO[UInt<6>],85)
(MemBlock perfEvents Set,dcache_probq_req      ,DCacheWrapper.io_perf[12].value: IO[UInt<6>],86)
(MemBlock perfEvents Set,dcache_probq_1_4_valid,DCacheWrapper.io_perf[13].value: IO[UInt<6>],87)
(MemBlock perfEvents Set,dcache_probq_2_4_valid,DCacheWrapper.io_perf[14].value: IO[UInt<6>],88)
(MemBlock perfEvents Set,dcache_probq_3_4_valid,DCacheWrapper.io_perf[15].value: IO[UInt<6>],89)
(MemBlock perfEvents Set,dcache_probq_4_4_valid,DCacheWrapper.io_perf[16].value: IO[UInt<6>],90)
(MemBlock perfEvents Set,load_req                 ,DCacheWrapper.io_perf[17].value: IO[UInt<6>],91)
(MemBlock perfEvents Set,load_replay              ,DCacheWrapper.io_perf[18].value: IO[UInt<6>],92)
(MemBlock perfEvents Set,load_replay_for_data_nack,DCacheWrapper.io_perf[19].value: IO[UInt<6>],93)
(MemBlock perfEvents Set,load_replay_for_no_mshr  ,DCacheWrapper.io_perf[20].value: IO[UInt<6>],94)
(MemBlock perfEvents Set,load_replay_for_conflict ,DCacheWrapper.io_perf[21].value: IO[UInt<6>],95)
(MemBlock perfEvents Set,load_req                 ,DCacheWrapper.io_perf[22].value: IO[UInt<6>],96)
(MemBlock perfEvents Set,load_replay              ,DCacheWrapper.io_perf[23].value: IO[UInt<6>],97)
(MemBlock perfEvents Set,load_replay_for_data_nack,DCacheWrapper.io_perf[24].value: IO[UInt<6>],98)
(MemBlock perfEvents Set,load_replay_for_no_mshr  ,DCacheWrapper.io_perf[25].value: IO[UInt<6>],99)
(MemBlock perfEvents Set,load_replay_for_conflict ,DCacheWrapper.io_perf[26].value: IO[UInt<6>],100)
(MemBlock perfEvents Set,load_req                 ,DCacheWrapper.io_perf[27].value: IO[UInt<6>],101)
(MemBlock perfEvents Set,load_replay              ,DCacheWrapper.io_perf[28].value: IO[UInt<6>],102)
(MemBlock perfEvents Set,load_replay_for_data_nack,DCacheWrapper.io_perf[29].value: IO[UInt<6>],103)
(MemBlock perfEvents Set,load_replay_for_no_mshr  ,DCacheWrapper.io_perf[30].value: IO[UInt<6>],104)
(MemBlock perfEvents Set,load_replay_for_conflict ,DCacheWrapper.io_perf[31].value: IO[UInt<6>],105)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[0].value: Wire[UInt<6>],106)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[1].value: Wire[UInt<6>],107)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[2].value: Wire[UInt<6>],108)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[3].value: Wire[UInt<6>],109)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[4].value: Wire[UInt<6>],110)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[5].value: Wire[UInt<6>],111)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[6].value: Wire[UInt<6>],112)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[7].value: Wire[UInt<6>],113)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[8].value: Wire[UInt<6>],114)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[9].value: Wire[UInt<6>],115)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[10].value: Wire[UInt<6>],116)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[11].value: Wire[UInt<6>],117)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[12].value: Wire[UInt<6>],118)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[13].value: Wire[UInt<6>],119)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[14].value: Wire[UInt<6>],120)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[15].value: Wire[UInt<6>],121)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[16].value: Wire[UInt<6>],122)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[17].value: Wire[UInt<6>],123)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.perfEventsPTW[18].value: Wire[UInt<6>],124)
(MemBlock perfEvents Set,ldDeqCount,MemBlock.ldDeqCount: OpResult[UInt<2>],125)
(MemBlock perfEvents Set,stDeqCount,MemBlock.stDeqCount: OpResult[UInt<3>],126)
Dispatch2Rs ports balance between 0 and 2
Dispatch2Rs ports balance between 1 and 3
Dispatch2Rs ports balance between 2 and 0
Dispatch2Rs ports balance between 3 and 1
Scheduler: 
  number of issue ports: 16
  number of replay ports: 6
  size of load and store RSes: 48
  number of std ports: 3
  number of load ports: 3
INT Regfile: 17R9W
RS 0: type AluExeUnit, size 64, enq 4, deq 4, numSrc 2, fast 9, wakeup 9
  innerIntUop: List(0, 1)
  innerFpUop: List()
  innerFastPorts: List(0, 1, 2, 3, 7, 8)
  outFastPorts: List(4, 5, 6)
  loadBalance: false
RS 1: type MulDivExeUnit, size 32, enq 4, deq 2, numSrc 2, fast 2, wakeup 9
  innerIntUop: List(1)
  innerFpUop: List()
  innerFastPorts: List(7, 8)
  outFastPorts: List()
  loadBalance: true
RS 2: type JmpCSRExeUnit, size 16, enq 1, deq 1, numSrc 2, fast 0, wakeup 9
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List()
  loadBalance: true
RS 3: type LoadExu, size 48, enq 3, deq 3, numSrc 1, fast 7, wakeup 9
  innerIntUop: List(0)
  innerFpUop: List()
  innerFastPorts: List(0, 1, 2, 3)
  outFastPorts: List(4, 5, 6)
  loadBalance: false
RS 4: type StaExu, size 48, enq 3, deq 3, numSrc 1, fast 4, wakeup 9
  innerIntUop: List(0)
  innerFpUop: List()
  innerFastPorts: List(0, 1, 2, 3)
  outFastPorts: List()
  loadBalance: true
RS 5: type StdExu, size 48, enq 3, deq 3, numSrc 1, fast 0, wakeup 18
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List()
  loadBalance: true
REGFILE: 192 entries, 17 read ports, 9 write ports
List(xiangshan.backend.fu.Alu@4dfd48eb) List(xiangshan.backend.fu.Alu@4dfd48eb) hasRedirect: 1
List(xiangshan.backend.fu.ArrayMultiplier@349d03ce, xiangshan.backend.fu.DividerWrapper@1899aa78, xiangshan.backend.fu.Bku@79eee48) List() hasRedirect: 0
CSR smblockctl init value:
  Store buffer replace threshold: 7
  Enable ld-ld vio check after reset: true
  Enable soft prefetch after reset: true
  Enable cache error after reset: true
  Enable uncache write outstanding: false
(CSR perfEvents Set,Hc,CSR.hpmEvents[0].value: Wire[UInt<6>],0)
(CSR perfEvents Set,Hc,CSR.hpmEvents[1].value: Wire[UInt<6>],1)
(CSR perfEvents Set,Hc,CSR.hpmEvents[2].value: Wire[UInt<6>],2)
(CSR perfEvents Set,Hc,CSR.hpmEvents[3].value: Wire[UInt<6>],3)
(CSR perfEvents Set,Hc,CSR.hpmEvents[4].value: Wire[UInt<6>],4)
(CSR perfEvents Set,Hc,CSR.hpmEvents[5].value: Wire[UInt<6>],5)
(CSR perfEvents Set,Hc,CSR.hpmEvents[6].value: Wire[UInt<6>],6)
(CSR perfEvents Set,Hc,CSR.hpmEvents[7].value: Wire[UInt<6>],7)
(CSR perfEvents Set,Hc,CSR.hpmEvents[8].value: Wire[UInt<6>],8)
(CSR perfEvents Set,Hc,CSR.hpmEvents[9].value: Wire[UInt<6>],9)
(CSR perfEvents Set,Hc,CSR.hpmEvents[10].value: Wire[UInt<6>],10)
(CSR perfEvents Set,Hc,CSR.hpmEvents[11].value: Wire[UInt<6>],11)
(CSR perfEvents Set,Hc,CSR.hpmEvents[12].value: Wire[UInt<6>],12)
(CSR perfEvents Set,Hc,CSR.hpmEvents[13].value: Wire[UInt<6>],13)
(CSR perfEvents Set,Hc,CSR.hpmEvents[14].value: Wire[UInt<6>],14)
(CSR perfEvents Set,Hc,CSR.hpmEvents[15].value: Wire[UInt<6>],15)
(CSR perfEvents Set,Hc,CSR.hpmEvents[16].value: Wire[UInt<6>],16)
(CSR perfEvents Set,Hc,CSR.hpmEvents[17].value: Wire[UInt<6>],17)
(CSR perfEvents Set,Hc,CSR.hpmEvents[18].value: Wire[UInt<6>],18)
(CSR perfEvents Set,Hc,CSR.hpmEvents[19].value: Wire[UInt<6>],19)
(CSR perfEvents Set,Hc,CSR.hpmEvents[20].value: Wire[UInt<6>],20)
(CSR perfEvents Set,Hc,CSR.hpmEvents[21].value: Wire[UInt<6>],21)
(CSR perfEvents Set,Hc,CSR.hpmEvents[22].value: Wire[UInt<6>],22)
(CSR perfEvents Set,Hc,CSR.hpmEvents[23].value: Wire[UInt<6>],23)
(CSR perfEvents Set,Hc,CSR.hpmEvents[24].value: Wire[UInt<6>],24)
(CSR perfEvents Set,Hc,CSR.hpmEvents[25].value: Wire[UInt<6>],25)
(CSR perfEvents Set,Hc,CSR.hpmEvents[26].value: Wire[UInt<6>],26)
(CSR perfEvents Set,Hc,CSR.hpmEvents[27].value: Wire[UInt<6>],27)
(CSR perfEvents Set,Hc,CSR.hpmEvents[28].value: Wire[UInt<6>],28)
(CSR perfEvents Set,Hc,CSR.hpmEvents[29].value: Wire[UInt<6>],29)
(CSR perfEvents Set,Hc,CSR.hpmEvents[30].value: Wire[UInt<6>],30)
(CSR perfEvents Set,Hc,CSR.hpmEvents[31].value: Wire[UInt<6>],31)
(CSR perfEvents Set,Hc,CSR.hpmEvents[32].value: Wire[UInt<6>],32)
(CSR perfEvents Set,Hc,CSR.hpmEvents[33].value: Wire[UInt<6>],33)
(CSR perfEvents Set,Hc,CSR.hpmEvents[34].value: Wire[UInt<6>],34)
(CSR perfEvents Set,Hc,CSR.hpmEvents[35].value: Wire[UInt<6>],35)
(CSR perfEvents Set,Hc,CSR.hpmEvents[36].value: Wire[UInt<6>],36)
(CSR perfEvents Set,Hc,CSR.hpmEvents[37].value: Wire[UInt<6>],37)
(CSR perfEvents Set,Hc,CSR.hpmEvents[38].value: Wire[UInt<6>],38)
(CSR perfEvents Set,Hc,CSR.hpmEvents[39].value: Wire[UInt<6>],39)
(CSR perfEvents Set,Hc,CSR.hpmEvents[40].value: Wire[UInt<6>],40)
(CSR perfEvents Set,Hc,CSR.hpmEvents[41].value: Wire[UInt<6>],41)
(CSR perfEvents Set,Hc,CSR.hpmEvents[42].value: Wire[UInt<6>],42)
(CSR perfEvents Set,Hc,CSR.hpmEvents[43].value: Wire[UInt<6>],43)
(CSR perfEvents Set,Hc,CSR.hpmEvents[44].value: Wire[UInt<6>],44)
(CSR perfEvents Set,Hc,CSR.hpmEvents[45].value: Wire[UInt<6>],45)
(CSR perfEvents Set,Hc,CSR.hpmEvents[46].value: Wire[UInt<6>],46)
(CSR perfEvents Set,Hc,CSR.hpmEvents[47].value: Wire[UInt<6>],47)
(CSR perfEvents Set,Hc,CSR.hpmEvents[48].value: Wire[UInt<6>],48)
(CSR perfEvents Set,Hc,CSR.hpmEvents[49].value: Wire[UInt<6>],49)
(CSR perfEvents Set,Hc,CSR.hpmEvents[50].value: Wire[UInt<6>],50)
(CSR perfEvents Set,Hc,CSR.hpmEvents[51].value: Wire[UInt<6>],51)
(CSR perfEvents Set,Hc,CSR.hpmEvents[52].value: Wire[UInt<6>],52)
(CSR perfEvents Set,Hc,CSR.hpmEvents[53].value: Wire[UInt<6>],53)
(CSR perfEvents Set,Hc,CSR.hpmEvents[54].value: Wire[UInt<6>],54)
(CSR perfEvents Set,Hc,CSR.hpmEvents[55].value: Wire[UInt<6>],55)
(CSR perfEvents Set,Hc,CSR.hpmEvents[56].value: Wire[UInt<6>],56)
(CSR perfEvents Set,Hc,CSR.hpmEvents[57].value: Wire[UInt<6>],57)
(CSR perfEvents Set,Hc,CSR.hpmEvents[58].value: Wire[UInt<6>],58)
(CSR perfEvents Set,Hc,CSR.hpmEvents[59].value: Wire[UInt<6>],59)
(CSR perfEvents Set,Hc,CSR.hpmEvents[60].value: Wire[UInt<6>],60)
(CSR perfEvents Set,Hc,CSR.hpmEvents[61].value: Wire[UInt<6>],61)
(CSR perfEvents Set,Hc,CSR.hpmEvents[62].value: Wire[UInt<6>],62)
(CSR perfEvents Set,Hc,CSR.hpmEvents[63].value: Wire[UInt<6>],63)
(CSR perfEvents Set,Hc,CSR.hpmEvents[64].value: Wire[UInt<6>],64)
(CSR perfEvents Set,Hc,CSR.hpmEvents[65].value: Wire[UInt<6>],65)
(CSR perfEvents Set,Hc,CSR.hpmEvents[66].value: Wire[UInt<6>],66)
(CSR perfEvents Set,Hc,CSR.hpmEvents[67].value: Wire[UInt<6>],67)
(CSR perfEvents Set,Hc,CSR.hpmEvents[68].value: Wire[UInt<6>],68)
(CSR perfEvents Set,Hc,CSR.hpmEvents[69].value: Wire[UInt<6>],69)
(CSR perfEvents Set,Hc,CSR.hpmEvents[70].value: Wire[UInt<6>],70)
(CSR perfEvents Set,Hc,CSR.hpmEvents[71].value: Wire[UInt<6>],71)
(CSR perfEvents Set,Hc,CSR.hpmEvents[72].value: Wire[UInt<6>],72)
(CSR perfEvents Set,Hc,CSR.hpmEvents[73].value: Wire[UInt<6>],73)
(CSR perfEvents Set,Hc,CSR.hpmEvents[74].value: Wire[UInt<6>],74)
(CSR perfEvents Set,Hc,CSR.hpmEvents[75].value: Wire[UInt<6>],75)
(CSR perfEvents Set,Hc,CSR.hpmEvents[76].value: Wire[UInt<6>],76)
(CSR perfEvents Set,Hc,CSR.hpmEvents[77].value: Wire[UInt<6>],77)
(CSR perfEvents Set,Hc,CSR.hpmEvents[78].value: Wire[UInt<6>],78)
(CSR perfEvents Set,Hc,CSR.hpmEvents[79].value: Wire[UInt<6>],79)
(CSR perfEvents Set,Hc,CSR.hpmEvents[80].value: Wire[UInt<6>],80)
(CSR perfEvents Set,Hc,CSR.hpmEvents[81].value: Wire[UInt<6>],81)
(CSR perfEvents Set,Hc,CSR.hpmEvents[82].value: Wire[UInt<6>],82)
(CSR perfEvents Set,Hc,CSR.hpmEvents[83].value: Wire[UInt<6>],83)
(CSR perfEvents Set,Hc,CSR.hpmEvents[84].value: Wire[UInt<6>],84)
(CSR perfEvents Set,Hc,CSR.hpmEvents[85].value: Wire[UInt<6>],85)
(CSR perfEvents Set,Hc,CSR.hpmEvents[86].value: Wire[UInt<6>],86)
(CSR perfEvents Set,Hc,CSR.hpmEvents[87].value: Wire[UInt<6>],87)
(CSR perfEvents Set,Hc,CSR.hpmEvents[88].value: Wire[UInt<6>],88)
(CSR perfEvents Set,Hc,CSR.hpmEvents[89].value: Wire[UInt<6>],89)
(CSR perfEvents Set,Hc,CSR.hpmEvents[90].value: Wire[UInt<6>],90)
(CSR perfEvents Set,Hc,CSR.hpmEvents[91].value: Wire[UInt<6>],91)
(CSR perfEvents Set,Hc,CSR.hpmEvents[92].value: Wire[UInt<6>],92)
(CSR perfEvents Set,Hc,CSR.hpmEvents[93].value: Wire[UInt<6>],93)
(CSR perfEvents Set,Hc,CSR.hpmEvents[94].value: Wire[UInt<6>],94)
(CSR perfEvents Set,Hc,CSR.hpmEvents[95].value: Wire[UInt<6>],95)
(CSR perfEvents Set,Hc,CSR.hpmEvents[96].value: Wire[UInt<6>],96)
(CSR perfEvents Set,Hc,CSR.hpmEvents[97].value: Wire[UInt<6>],97)
(CSR perfEvents Set,Hc,CSR.hpmEvents[98].value: Wire[UInt<6>],98)
(CSR perfEvents Set,Hc,CSR.hpmEvents[99].value: Wire[UInt<6>],99)
WARNING: fast not implemented!! jmp will be delayed for one cycle.
WARNING: fast not implemented!! csr will be delayed for one cycle.
WARNING: fast not implemented!! fence will be delayed for one cycle.
List(xiangshan.backend.fu.Jump@2853d478, xiangshan.backend.fu.CSR@418df066, xiangshan.backend.fu.Fence@640d8d26, xiangshan.backend.fu.fpu.IntToFP@c563870) List(xiangshan.backend.fu.Jump@2853d478) hasRedirect: 1
[[33mwarn[0m] src/main/scala/xiangshan/backend/fu/CSR.scala:1091:21: Dynamic index with width 4 is too small for extractee of width 64
[[33mwarn[0m]   val delegS = deleg(causeNO(3,0)) && (priviledgeMode < ModeM)
[[33mwarn[0m]                     ^
[[33mwarn[0m] There were [33m1 warning(s)[0m during hardware elaboration.
scheduler.writeback(0) is connected from exu AluExeUnit
scheduler.writeback(1) is connected from exu AluExeUnit
scheduler.writeback(2) is connected from exu AluExeUnit
scheduler.writeback(3) is connected from exu AluExeUnit
writeback from exu 0 is replaced by RegNext(rs.fastUopOut)
writeback from exu 1 is replaced by RegNext(rs.fastUopOut)
writeback from exu 2 is replaced by RegNext(rs.fastUopOut)
writeback from exu 3 is replaced by RegNext(rs.fastUopOut)
Dispatch2Rs ports balance between 0 and 2
Dispatch2Rs ports balance between 1 and 3
Dispatch2Rs ports balance between 2 and 0
Dispatch2Rs ports balance between 3 and 1
Scheduler: 
  number of issue ports: 6
  number of replay ports: 0
  size of load and store RSes: 0
  number of std ports: 0
  number of load ports: 0
FP  Regfile: 15R9W
RS 0: type FmacExeUnit, size 64, enq 4, deq 4, numSrc 3, fast 4, wakeup 9
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List(9, 10, 11, 12)
  loadBalance: true
RS 1: type FmiscExeUnit, size 32, enq 4, deq 2, numSrc 2, fast 4, wakeup 9
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List(9, 10, 11, 12)
  loadBalance: true
REGFILE: 192 entries, 15 read ports, 9 write ports
List(xiangshan.backend.fu.fpu.FMA@26ba8bfc) List() hasRedirect: 0
[[33mwarn[0m] fudian/src/main/scala/fudian/FDIV.scala:625:24: Dynamic index with width 33 is too large for extractee of width 26
[[33mwarn[0m]   aHeadReg := Mux(aIter(j << 1),
[[33mwarn[0m]                        ^
[[33mwarn[0m] There were [33m1 warning(s)[0m during hardware elaboration.
[[33mwarn[0m] fudian/src/main/scala/fudian/FDIV.scala:625:24: Dynamic index with width 33 is too large for extractee of width 55
[[33mwarn[0m]   aHeadReg := Mux(aIter(j << 1),
[[33mwarn[0m]                        ^
[[33mwarn[0m] There were [33m1 warning(s)[0m during hardware elaboration.
List(xiangshan.backend.fu.fpu.FPToInt@11e1d2ba, xiangshan.backend.fu.fpu.FPToFP@16d0f8fa, xiangshan.backend.fu.fpu.FDivSqrt@39f6f4af) List() hasRedirect: 0
Enable fast wakeup from function unit FmacExeUnit
Enable fast wakeup from function unit FmacExeUnit
Enable fast wakeup from function unit FmacExeUnit
Enable fast wakeup from function unit FmacExeUnit
scheduler.writeback(9) is connected from exu FmacExeUnit
scheduler.writeback(10) is connected from exu FmacExeUnit
scheduler.writeback(11) is connected from exu FmacExeUnit
scheduler.writeback(12) is connected from exu FmacExeUnit
Rob: size 256, numWbPorts: List(22, 21), commitwidth: 6
exuPorts: List(List(AluExeUnit), List(AluExeUnit), List(AluExeUnit), List(AluExeUnit), List(LoadExu), List(LoadExu), List(LoadExu), List(MulDivExeUnit, JmpCSRExeUnit, FmiscExeUnit), List(MulDivExeUnit, FmiscExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmiscExeUnit, JmpCSRExeUnit), List(FmiscExeUnit), List(StaExu), List(StaExu), List(StaExu))
stdPorts: List(List(StdExu), List(StdExu), List(StdExu))
fflags: List(List(JmpCSRExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmacExeUnit), List(FmiscExeUnit), List(FmiscExeUnit))
ExceptionGen:
  [0] List(JmpCSRExeUnit): exception List(2, 3, 8, 9, 11), flushPipe true, replayInst false
  [1] List(LoadExu): exception List(4, 5, 6, 7, 13, 15), flushPipe true, replayInst true
  [2] List(LoadExu): exception List(4, 5, 6, 7, 13, 15), flushPipe true, replayInst true
  [3] List(LoadExu): exception List(4, 5, 6, 7, 13, 15), flushPipe true, replayInst true
  [4] List(StaExu): exception List(6, 7, 15), flushPipe false, replayInst false
  [5] List(StaExu): exception List(6, 7, 15), flushPipe false, replayInst false
  [6] List(StaExu): exception List(6, 7, 15), flushPipe false, replayInst false
Constantin fileRead: isWriteInstInfoTable0 = 0
Dispatch2Rs ports balance between 0 and 2
Dispatch2Rs ports balance between 1 and 3
Dispatch2Rs ports balance between 2 and 0
Dispatch2Rs ports balance between 3 and 1
Dispatch2Rs ports balance between 0 and 2
Dispatch2Rs ports balance between 1 and 3
Dispatch2Rs ports balance between 2 and 0
Dispatch2Rs ports balance between 3 and 1
(CtrlBlock perfEvents Set,noEvent,UInt<1>(0),0)
(CtrlBlock perfEvents Set,decoder_fused_instr,DecodeStage.io_perf[0].value: IO[UInt<6>],1)
(CtrlBlock perfEvents Set,decoder_waitInstr,DecodeStage.io_perf[1].value: IO[UInt<6>],2)
(CtrlBlock perfEvents Set,decoder_stall_cycle,DecodeStage.io_perf[2].value: IO[UInt<6>],3)
(CtrlBlock perfEvents Set,decoder_utilization,DecodeStage.io_perf[3].value: IO[UInt<6>],4)
(CtrlBlock perfEvents Set,rename_in                  ,Rename.io_perf[0].value: IO[UInt<6>],5)
(CtrlBlock perfEvents Set,rename_waitinstr           ,Rename.io_perf[1].value: IO[UInt<6>],6)
(CtrlBlock perfEvents Set,rename_stall_cycle_dispatch,Rename.io_perf[2].value: IO[UInt<6>],7)
(CtrlBlock perfEvents Set,rename_stall_cycle_fp      ,Rename.io_perf[3].value: IO[UInt<6>],8)
(CtrlBlock perfEvents Set,rename_stall_cycle_int     ,Rename.io_perf[4].value: IO[UInt<6>],9)
(CtrlBlock perfEvents Set,rename_stall_cycle_walk    ,Rename.io_perf[5].value: IO[UInt<6>],10)
(CtrlBlock perfEvents Set,me_freelist_1_4_valid,Rename.io_perf[6].value: IO[UInt<6>],11)
(CtrlBlock perfEvents Set,me_freelist_2_4_valid,Rename.io_perf[7].value: IO[UInt<6>],12)
(CtrlBlock perfEvents Set,me_freelist_3_4_valid,Rename.io_perf[8].value: IO[UInt<6>],13)
(CtrlBlock perfEvents Set,me_freelist_4_4_valid,Rename.io_perf[9].value: IO[UInt<6>],14)
(CtrlBlock perfEvents Set,std_freelist_1_4_valid,Rename.io_perf[10].value: IO[UInt<6>],15)
(CtrlBlock perfEvents Set,std_freelist_2_4_valid,Rename.io_perf[11].value: IO[UInt<6>],16)
(CtrlBlock perfEvents Set,std_freelist_3_4_valid,Rename.io_perf[12].value: IO[UInt<6>],17)
(CtrlBlock perfEvents Set,std_freelist_4_4_valid,Rename.io_perf[13].value: IO[UInt<6>],18)
(CtrlBlock perfEvents Set,dispatch_in,Dispatch.io_perf[0].value: IO[UInt<6>],19)
(CtrlBlock perfEvents Set,dispatch_empty,Dispatch.io_perf[1].value: IO[UInt<6>],20)
(CtrlBlock perfEvents Set,dispatch_utili,Dispatch.io_perf[2].value: IO[UInt<6>],21)
(CtrlBlock perfEvents Set,dispatch_waitinstr,Dispatch.io_perf[3].value: IO[UInt<6>],22)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_lsq,Dispatch.io_perf[4].value: IO[UInt<6>],23)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_rob,Dispatch.io_perf[5].value: IO[UInt<6>],24)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_int_dq,Dispatch.io_perf[6].value: IO[UInt<6>],25)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_fp_dq,Dispatch.io_perf[7].value: IO[UInt<6>],26)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_ls_dq,Dispatch.io_perf[8].value: IO[UInt<6>],27)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue.io_perf[0].value: IO[UInt<6>],28)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue.io_perf[1].value: IO[UInt<6>],29)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue.io_perf[2].value: IO[UInt<6>],30)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue.io_perf[3].value: IO[UInt<6>],31)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue.io_perf[4].value: IO[UInt<6>],32)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue.io_perf[5].value: IO[UInt<6>],33)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue.io_perf[6].value: IO[UInt<6>],34)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue.io_perf[7].value: IO[UInt<6>],35)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue_1.io_perf[0].value: IO[UInt<6>],36)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue_1.io_perf[1].value: IO[UInt<6>],37)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue_1.io_perf[2].value: IO[UInt<6>],38)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue_1.io_perf[3].value: IO[UInt<6>],39)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue_1.io_perf[4].value: IO[UInt<6>],40)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue_1.io_perf[5].value: IO[UInt<6>],41)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue_1.io_perf[6].value: IO[UInt<6>],42)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue_1.io_perf[7].value: IO[UInt<6>],43)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue_2.io_perf[0].value: IO[UInt<6>],44)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue_2.io_perf[1].value: IO[UInt<6>],45)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue_2.io_perf[2].value: IO[UInt<6>],46)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue_2.io_perf[3].value: IO[UInt<6>],47)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue_2.io_perf[4].value: IO[UInt<6>],48)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue_2.io_perf[5].value: IO[UInt<6>],49)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue_2.io_perf[6].value: IO[UInt<6>],50)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue_2.io_perf[7].value: IO[UInt<6>],51)
(CtrlBlock perfEvents Set,rob_interrupt_num      ,Rob.io_perf[0].value: IO[UInt<6>],52)
(CtrlBlock perfEvents Set,rob_exception_num      ,Rob.io_perf[1].value: IO[UInt<6>],53)
(CtrlBlock perfEvents Set,rob_flush_pipe_num     ,Rob.io_perf[2].value: IO[UInt<6>],54)
(CtrlBlock perfEvents Set,rob_replay_inst_num    ,Rob.io_perf[3].value: IO[UInt<6>],55)
(CtrlBlock perfEvents Set,rob_commitUop          ,Rob.io_perf[4].value: IO[UInt<6>],56)
(CtrlBlock perfEvents Set,rob_commitInstr        ,Rob.io_perf[5].value: IO[UInt<6>],57)
(CtrlBlock perfEvents Set,rob_commitInstrMove    ,Rob.io_perf[6].value: IO[UInt<6>],58)
(CtrlBlock perfEvents Set,rob_commitInstrFused   ,Rob.io_perf[7].value: IO[UInt<6>],59)
(CtrlBlock perfEvents Set,rob_commitInstrLoad    ,Rob.io_perf[8].value: IO[UInt<6>],60)
(CtrlBlock perfEvents Set,rob_commitInstrBranch  ,Rob.io_perf[9].value: IO[UInt<6>],61)
(CtrlBlock perfEvents Set,rob_commitInstrLoadWait,Rob.io_perf[10].value: IO[UInt<6>],62)
(CtrlBlock perfEvents Set,rob_commitInstrStore   ,Rob.io_perf[11].value: IO[UInt<6>],63)
(CtrlBlock perfEvents Set,rob_walkInstr          ,Rob.io_perf[12].value: IO[UInt<6>],64)
(CtrlBlock perfEvents Set,rob_walkCycle          ,Rob.io_perf[13].value: IO[UInt<6>],65)
(CtrlBlock perfEvents Set,rob_1_4_valid          ,Rob.io_perf[14].value: IO[UInt<6>],66)
(CtrlBlock perfEvents Set,rob_2_4_valid          ,Rob.io_perf[15].value: IO[UInt<6>],67)
(CtrlBlock perfEvents Set,rob_3_4_valid          ,Rob.io_perf[16].value: IO[UInt<6>],68)
(CtrlBlock perfEvents Set,rob_4_4_valid          ,Rob.io_perf[17].value: IO[UInt<6>],69)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[0].value: IO[UInt<6>],70)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[1].value: IO[UInt<6>],71)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[2].value: IO[UInt<6>],72)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[3].value: IO[UInt<6>],73)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[4].value: IO[UInt<6>],74)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[5].value: IO[UInt<6>],75)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[0].value: IO[UInt<6>],76)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[1].value: IO[UInt<6>],77)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[2].value: IO[UInt<6>],78)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[3].value: IO[UInt<6>],79)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[4].value: IO[UInt<6>],80)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[5].value: IO[UInt<6>],81)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[0].value: IO[UInt<6>],82)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[1].value: IO[UInt<6>],83)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[2].value: IO[UInt<6>],84)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[3].value: IO[UInt<6>],85)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[4].value: IO[UInt<6>],86)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[5].value: IO[UInt<6>],87)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[6].value: IO[UInt<6>],88)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[7].value: IO[UInt<6>],89)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[8].value: IO[UInt<6>],90)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[9].value: IO[UInt<6>],91)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[10].value: IO[UInt<6>],92)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[11].value: IO[UInt<6>],93)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[12].value: IO[UInt<6>],94)
FPGAPlatform:false EnableDebug:false
====== Inclusive L2 (256.0KB * 4-bank) prefetch: Some(PrefetchReceiverParams(32)) ======
bankBits: 2
replacement: plru
replace policy: 3
sets:512 ways:8 blockBytes:64
usr/needHint: (1-bit)
usr/vaddr: (33-bit)
usr/alias: (2-bit)
usr/reqSource: (4-bit)
	0 <= dcache;	sourceRange: 0~35
	1 <= icache;	sourceRange: 72~75
	2 <= ptw;	sourceRange: 64~71
Constantin fileRead: enableTP0 = 1
Constantin fileRead: tp_throttleCycles0 = 4
Constantin fileRead: tp_hitAsTrigger0 = 1
Constantin fileRead: tp_triggerThres0 = 1
Constantin fileRead: tp_recordThres0 = 16
Constantin fileRead: tp_trainOnVaddr0 = 0
Constantin fileRead: tp_trainOnL1PF0 = 0
====== Non-inclusive L3 (2.0MB * 4-bank) prefetch: Some(L3PrefetchReceiverParams(32)) ======
bankBits: 2
sets:2048 ways:16 blockBytes:64
[client] size:640.0KB
[client] sets:1024 ways:10 blockBytes:64
blockGranularityBits: 9
usr/reqSource: (4-bit)
usr/uc: (2-bit)
echo/tc: (2-bit)
echo/blockisdirty: (1-bit)
clientBits: 1
Data ECC bits:8
Tag ECC bits:6
Tag ECC bits:6
clientBits: 1
Data ECC bits:8
Tag ECC bits:6
Tag ECC bits:6
clientBits: 1
Data ECC bits:8
Tag ECC bits:6
Tag ECC bits:6
clientBits: 1
Data ECC bits:8
Tag ECC bits:6
Tag ECC bits:6
	0 <= L2
	1 <= dma ID#0
	2 <= dma ID#1
	3 <= debug
[[33mwarn[0m] rocket-chip/src/main/scala/devices/debug/Debug.scala:1727:37: Dynamic index with width 2 is too large for extractee of width 1
[[33mwarn[0m]     val hartHalted   = haltedBitRegs(selectedHartReg)
[[33mwarn[0m]                                     ^
[[33mwarn[0m] There were [33m1 warning(s)[0m during hardware elaboration.
(List(int),IntRange(0,2))
(List(int),IntRange(0,1))
(List(int),IntRange(0,1))
(List(int),IntRange(0,1))
sed -i -e 's/_\(aw\|ar\|w\|r\|b\)_\(\|bits_\)/_\1/g' build/SimTop.v
sed -i -e 's/$fatal/xs_assert(`__LINE__)/g' ./build/SimTop.v
make -C ./difftest emu SIM_TOP=SimTop DESIGN_DIR=/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan NUM_CORES=1
make[1]: Entering directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest'
Tue, 18 Jun 2024 20:26:44 +0800
time -a -o /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/time.log verilator --exe --cc -O3 --top-module SimTop +define+VERILATOR=1 +define+PRINTF_COND=1 +define+RANDOMIZE_REG_INIT +define+RANDOMIZE_MEM_INIT +define+RANDOMIZE_GARBAGE_ASSIGN +define+RANDOMIZE_DELAY=0 -Wno-STMTDLY -Wno-WIDTH --assert --x-assign unique --stats-vars --output-split 30000 --output-split-cfuncs 30000 -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build -CFLAGS "-I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/config -DNOOP_HOME=\\\"/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan\\\" -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/generated-src -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/plugin/include -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/difftest -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build -DENABLE_CHISEL_DB -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build -DENABLE_CONSTANTIN -I/nfs/home/zhangruisi/myXiangShan5/xs-env/DRAMsim3/src -DWITH_DRAMSIM3 -DDRAMSIM3_CONFIG=\\\"/nfs/home/zhangruisi/myXiangShan5/xs-env/DRAMsim3/configs/XiangShan.ini\\\" -DDRAMSIM3_OUTDIR=\\\"/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build\\\" -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/plugin/spikedasm -I/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/verilator -DVERILATOR -DNUM_CORES=1 --std=c++17 -DVERILATOR_4_210 -DENABLE_FST -DEMU_THREAD=16" -LDFLAGS "-lsqlite3 /nfs/home/zhangruisi/myXiangShan5/xs-env/DRAMsim3/build/libdramsim3.a -lz -ldl" -o /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/emu +define+DIFFTEST --instr-count-dpi 1 --no-timing +define+VERILATOR_5 --trace-fst --threads 16 --threads-dpi all -Mdir /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/emu-compile /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/SimTop.v /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/vsrc/common/ref.v /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/vsrc/common/assert.v /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/vsrc/common/SimJTAG.v /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/uart.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/main.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/compress.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/common.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/golden.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/flash.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/coverage.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/lightsss.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/device.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/keyboard.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/dut.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/ram.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/SimJTAG.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/vga.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/remote_bitbang.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/common/sdcard.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/generated-src/difftest-dpic.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/difftest/difftrace.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/difftest/difftest.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/difftest/refproxy.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/difftest/goldenmem.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/chisel_db.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/constantin.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/plugin/spikedasm/spikedasm.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/verilator/snapshot.cpp /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest/src/test/csrc/verilator/emu.cpp
- V e r i l a t i o n   R e p o r t: Verilator 5.025 devel rev v5.024-69-g7c9fa8647
- Verilator: Built from 1303.551 MB sources in 1130 modules, into 5013.440 MB in 2037 C++ files needing 1.387 MB
- Verilator: Walltime 1260.495 s (elab=47.012, cvt=1094.108, bld=0.000); cpu 0.000 s on 1 threads; alloced 54210.770 MB
make[2]: Entering directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest'
Tue, 18 Jun 2024 20:47:56 +0800
time -a -o /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/time.log make -s VM_PARALLEL_BUILDS=1 OPT_FAST="-O3" -C /nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/emu-compile -f VSimTop.mk 
make[3]: Entering directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/emu-compile'
make[3]: Leaving directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/build/emu-compile'
make[2]: Leaving directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest'
make[1]: Leaving directory '/nfs/home/zhangruisi/myXiangShan5/xs-env/XiangShan/difftest'
